@using Microsoft.AspNetCore.Hosting
@inject IHostingEnvironment host
@functions {
private IEnumerable<string> GetBundles()
{
    foreach (var d in host.ContentRootFileProvider.GetDirectoryContents("wwwroot/bundles"))
    {
        if (!d.IsDirectory && d.Name.EndsWith(".js"))
            yield return Url.Content($"~/bundles/{d.Name}");
    }
}
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
    <title>Xania</title>

    <link href="~/jspm_packages/npm/izitoast@1.4.0/dist/css/iziToast.min.css" rel="stylesheet" />
    <link href="~/jspm_packages/npm/@@coreui/coreui@2.0.2/dist/css/coreui.min.css" rel="stylesheet" />
    <link href="~/jspm_packages/npm/@@coreui/icons@0.3.0/css/coreui-icons.min.css" rel="stylesheet" />


    <link href="~/css/xania.min.css" rel="stylesheet" />
    @RenderSection("head", required: false)
</head>
<body class="app header-fixed sidebar-md-show sidebar-fixed">
    <partial name="_Header" />
    <div class="app-body">
        <div class="sidebar">
            <partial name="_Sidebar" />
        </div>
        <main class="main">
            @RenderBody()
        </main>
        <aside class="aside-menu">
            <!-- Aside menu content here -->
        </aside>
    </div>

    <environment include="Development">
        <script src="~/jspm_packages/system.src.js"></script>
        @*<script>
            var systemLocate = System.locate;
            var time = new Date().getTime();
            System.locate = function (load) {
                return Promise.resolve(systemLocate.call(this, load)).then(function (address) {
                    return address + '?' + time;
                });
            }
        </script>*@
    </environment>
    <environment exclude="Development">
        <script src="~/system.js"></script>
    </environment>
    <script src="~/config.js"></script>
    @foreach (var p in GetBundles())
    {
        <script src="@p"></script>
    }
    @RenderSection("Scripts", required: false)

    <partial name="_Templates" />
    <script>
        System.import("/app").then(function (app) {
            var main = window.document.body.querySelector("main");
            app.run(main);
        });
        System.import("/src/diagnostics/logger").then(function (logger) {
            window.onerror = function (message, url, lineNumber, colNumber, error) {
                logger.error({ message: message, url, lineNumber, colNumber, error, date: new Date() });
            }
        });

    </script>
</body>
</html>
